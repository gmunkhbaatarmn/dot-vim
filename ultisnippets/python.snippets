snippet if            "if expression"            b
if ${1:True}:
	${0:${VISUAL:pass}}
endsnippet

snippet try           "try except"               b
try:
	${1:${VISUAL:pass}}
except ${2:Exception}:
	${0:${VISUAL:pass}}
endsnippet
snippet for           "for loop"                 b
for $1 in $2:
	$0
endsnippet

snippet env           "environment"              b
#!/usr/bin/env python
# -*- coding: utf-8 -*-
endsnippet

snippet utf           "coding utf-8"             b
# coding: utf-8
endsnippet

snippet main          "main funtion"             b
if __name__ == "__main__":
	${0:${VISUAL:main()}}
endsnippet

snippet "log[ing]*"   "logging error"            r
import logging
logging.error(${0:${VISUAL:"logging"}})
endsnippet

snippet "cl[as]*"     "class"                    r
class ${1:Foo}(${2:object}):
	def ${3:__init__}(self):
		${0:pass}
endsnippet

snippet "fr[om]*"     "from * import *"          r
from $1 import $0
endsnippet

snippet "imp[ort]*"   "import"                   r
import $0
endsnippet

priority 2
snippet "fre[in]*"    "input.txt to stdin"       r
sys.stdin = open("input.txt")
endsnippet

priority 1
snippet "fre[out]*"   "input.txt to stdout"      r
sys.stdout = open("output.txt", "w+")
endsnippet

snippet "la[mbda]*"   "lambda function"          r
${1:var} = lambda ${2:x}: ${0:${VISUAL:value}}
endsnippet
